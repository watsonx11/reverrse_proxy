http:
 #region routers 
  routers:
    sync01:
      entryPoints:
        - "http"
      rule: "Host(`sync01.local.fiftyfifty90.com`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: sync01
    search:
      entryPoints:
        - "https"
      rule: "Host(`search.local.fiftyfifty90.com`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: search
    gitea:
      entryPoints:
        - "https"
      rule: "Host(`gitea.local.fiftyfifty90.com`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: gitea
    jellyfin:
      entryPoints:
        - "https"
      rule: "Host(`jellyfin.local.fiftyfifty90.com`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: jellyfin
    portainer:
      entryPoints:
        - "https"
      rule: "Host(`portainer.local.fiftyfifty90.com`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: portainer
    nas:
      entryPoints:
        - "https"
      rule: "Host(`nas.local.fiftyfifty90.com`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: nas
    cloudkey:
      entryPoints:
        - "https"
      rule: "Host(`cloudkey.local.fiftyfifty90.com`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: cloudkey
    homepage:
      entrypoints:
        - "https"
      rule: "Host(`homepage.local.fiftyfifty90.com`)"
      tls: {}
      service: homepage
    pihole01:
      entryPoints:
        - "https"
      rule: "Host(`pihole01.local.fiftyfifty90.com`)"
      tls: {}
      service: pihole01
    pihole02:
      entryPoints:
        - "https"
      rule: "Host(`pihole02.local.fiftyfifty90.com`)"
      tls: {}
      service: pihole02
    proxmox01:
      entryPoints:
        - "https"
      rule: "Host(`proxmox01.local.fiftyfifty90.com`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: proxmox01
#endregion
#region services
  services:
    sync01:
      loadBalancer:
        servers:
          - url: "http://192.168.1.3:8384"
        passHostHeader: true
    search:
      loadBalancer:
        servers:
          - url: "http://192.168.1.3:8080"
        passHostHeader: true
    gitea:
      loadBalancer:
        servers:
          - url: "http://192.168.1.228:3052"
        passHostHeader: true
    jellyfin:
      loadBalancer:
        servers:
          - url: "http://192.168.1.228:8096"
        passHostHeader: true
    portainer:
      loadBalancer:
        servers:
          - url: "http://192.168.1.228:9000"
        passHostHeader: true
    nas:
      loadBalancer:
        servers:
          - url: "http://192.168.1.228:5000"
        passHostHeader: true
    cloudkey:
      loadBalancer:
        servers:
          - url: "https://192.168.1.2"
        passHostHeader: true
    homepage:
      loadBalancer:
        servers:
          - url: "http://192.168.1.3:3000"
    pihole01:
      loadBalancer:
        servers:
          - url: "http://192.168.1.10:80"
    pihole02:
      loadBalancer:
        servers:
          - url: "http://192.168.1.11:80"
    proxmox01:
      loadBalancer:
        servers:
          - url: "https://192.168.1.215:8006"
#endregion
  middlewares:
    https-redirectscheme:
      redirectScheme:
        scheme: https
        permanent: true
    default-headers:
      headers:
        frameDeny: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 15552000
        customFrameOptionsValue: SAMEORIGIN
        customRequestHeaders:
          X-Forwarded-Proto: https

    default-whitelist:
      ipAllowList:
        sourceRange:
        - "10.0.0.0/8"
        - "192.168.0.0/16"
        - "172.16.0.0/12"

    secured:
      chain:
        middlewares:
        - default-whitelist
        - default-headers

# tcp:
#   routers:
#     k3s-router:
#       rule: "HostSNI(`*`)"
#       service: "k3s-service"
#       entryPoints:
#         - "k3s"
#       tls:
#         passthrough: true

#   services:
#     k3s-service:
#       loadBalancer:
#         servers:
#           - address: "192.168.1.3:6443"

